?summary.lm
set.seed(1)
n = 100
set.seed(1)
rif = 0
for(i in 1:1000){
dati = lin(1:n, c(1, 0.67))
if(summary(lm(y~x, data = dati))$coefficients[2,4] < 0.05){
rif = rif + 1
}
}
rif
n = 100
set.seed(1)
rif = 0
for(i in 1:10000){
dati = lin(1:n, c(1, 0.67))
if(summary(lm(y~x, data = dati))$coefficients[2,4] < 0.05){
rif = rif + 1
}
}
summary(lm(y~x, data = dati))$coefficients
summary(lm(y~x, data = dati))$coefficients[2,4]
n = 1000
rif = 0
for(i in 1:1000){
dati = lin(1:n, c(1, 0.67))
if(summary(lm(y~x, data = dati))$coefficients[2,4] < 0.05){
rif = rif + 1
}
}
rif
n = 1000
rif = 0
for(i in 1:1000){
dati = lin(1:n, c(1, 0.67))
if(summary(lm(y~x + I(x^2), data = dati))$coefficients[2,4] < 0.05){
rif = rif + 1
}
}
summary(lm(y~x + I(x^2), data = dati))
n = 1000
rif = 0
for(i in 1:1000){
dati = lin(1:n, c(1, 0.67))
if(summary(lm(y~x + I(x^2), data = dati))$coefficients[3,4] < 0.05){
rif = rif + 1
}
}
summary(lm(y~x + I(x^2), data = dati))$coefficients[3,4]
summary(lm(y~x + I(x^2), data = dati))$coefficients
summary(lm(y~x + I(x^2), data = dati))
dati = lin(1:n, c(1, 0.67))
summary(lm(y~x + I(x^2), data = dati))
dati = lin(1:n, c(1, 0.67))
summary(lm(y~x + I(x^2), data = dati))
dati = lin(1:n, c(1, 0.67))
summary(lm(y~x + I(x^2), data = dati))
dati = lin(1:n, c(1, 0.67))
summary(lm(y~x + I(x^2), data = dati))
dati = lin(1:n, c(1, 0.67))
summary(lm(y~x + I(x^2), data = dati))
dati = lin(1:n, c(1, 0.67))
summary(lm(y~x + I(x^2), data = dati))
dati = lin(1:n, c(1, 0.67))
summary(lm(y~x + I(x^2), data = dati))
dati = lin(1:n, c(1, 0.67))
summary(lm(y~x + I(x^2), data = dati))
n = 10000
rif = 0
for(i in 1:1000){
dati = lin(1:n, c(1, 0.67))
if(summary(lm(y~x + I(x^2), data = dati))$coefficients[3,4] < 0.05){
rif = rif + 1
}
}
n = 30000
rif = 0
for(i in 1:1000){
dati = lin(1:n, c(1, 0.67))
if(summary(lm(y~x + I(x^2), data = dati))$coefficients[3,4] < 0.05){
rif = rif + 1
}
}
rif
install.packages('IRkernel')
IRkernel::installspec()
p1 = c(2, 4.1, 2.1, 3.85, 2.1, 3.85, 2, 3.9)
(p1 - (max(p1) + min(p1))/2)/((max(p1) + min(p1))/2)
(p1 - (max(p1) + min(p1))/2)/((max(p1) - min(p1))/2)
X = matrix(C(-1, 1-))
X = matrix(C(-1, 1, -0.9, 0.76, -0.9, 0.85, -1, 0.9, -0.8, -1, 0.8, 1, -0.95, -0.9, 0.8, 1, -1, -0.85, -0.9, -1, 1, 0.95, 0.95, 1), ncol = 3)
X = matrix(c(-1, 1, -0.9, 0.76, -0.9, 0.85, -1, 0.9, -0.8, -1, 0.8, 1, -0.95, -0.9, 0.8, 1, -1, -0.85, -0.9, -1, 1, 0.95, 0.95, 1), ncol = 3)
X
solve(X)
X = c(1, X)
x
X
solve(t(X)%*%X)
X = matrix(c(-1, 1, -0.9, 0.76, -0.9, 0.85, -1, 0.9, -0.8, -1, 0.8, 1, -0.95, -0.9, 0.8, 1, -1, -0.85, -0.9, -1, 1, 0.95, 0.95, 1), ncol = 3)
X = cbind(1, X)
X
x12 = X[, 1] * X[, 2]
x13 = X[, 1] * X[, 3]
x23 = X[, 1] * X[, 3]
x23 = X[, 2] * X[, 3]
X
X = matrix(c(-1, 1, -0.9, 0.76, -0.9, 0.85, -1, 0.9, -0.8, -1, 0.8, 1, -0.95, -0.9, 0.8, 1, -1, -0.85, -0.9, -1, 1, 0.95, 0.95, 1), ncol = 3)
x12 = X[, 1] * X[, 2]
x23 = X[, 2] * X[, 3]
x13 = X[, 1] * X[, 3]
x123 = X[,1] * X[,2] * X[,3]
X = cbind(1, X, x12, x23, x13, x123)
X
solve(X)
round(solve(X),3)
round(solve(X),3)
X = matrix(c(-1, 1, -0.9, 0.76, -0.9, 0.85, -1, 0.9, -0.8, -1, 0.8, 1, -0.95, -0.9, 0.8, 1, -1, -0.85, -0.9, -1, 1, 0.95, 0.95, 1), ncol = 3)
X = cbind(1, X, x12, x13, x23, x123)
round(solve(X),3)
y = c(31, 22, 53, 45, 43, 37, 85, 80)
round(solve(X),3) %*% y
det(X)
1/det(X)
m = rep(1,8)
x1 = rep(c(-1,1), 4)
m
x
x1
x2 = rep(c(-1, -1, 1, 1), 2)
x3 = c(rep(-1,4), rep(1, 4))
x1x2 = x1 * x2
x1x3 = x1 * x3
x2x3 = x2 * x3
x1x2x3 = x1 * x2 * x3
X = cbind(m, x1, x2, x3, x1x2, x1x3, x1x2x3)
X
det(X)
X = cbind(m, x1, x2, x3, x1x2, x1x3, x2x3, x1x2x3)
X
det(X)
1/det(X)
det(t(X)%*%X)
solve(X)
X = cbind(m, x1, x2, x3, x1x2, x1x3, x1x2x3)
det(X)
X = cbind(m, x1, x2, x3, x1x2, x1x3, x2x3, x1x2x3)
det(X)
dati = data.frame(x = 1:100, y =x+rnorm(100, 0, 1))
plot(y~x, data = dati)
dati = data.frame(x = 1:100, y = 1:100+rnorm(100, 0, 1))
plot(y~x, data = dati)
#dati = read.csv("pippo.csv")
library(ggplot2)
ggplot(dati, aes(x = x, y = y)) +
geom_line()
ggplot(dati, aes(x = x, y = y)) +
geom_line() +
geom_point()
ggplot(dati, aes(x = x, y = y)) +
geom_line() +
geom_point(color = "darkblue")
dati = data.frame(x = 1:30, y = 1:30+rnorm(30, 0, 1))
plot(y~x, data = dati)
ggplot(dati, aes(x = x, y = y)) +
geom_line() +
geom_point(color = "darkblue")
ggplot(dati, aes(x = x, y = y)) +
geom_line(lwd = 2) +
geom_point(color = "darkblue")
ggplot(dati, aes(x = x, y = y)) +
geom_line(lwd = 1.2) +
geom_point(color = "darkblue", cex = 1.2)
plot(y~x, data = dati, type = "b")
plot(y~x, data = dati, type = "b", pch = 20)
ggplot(dati, aes(x = x, y = y)) +
geom_line(lwd = 1.2) +
geom_point(color = "darkblue", cex = 1.2)
ggplot(dati, aes(x = x, y = y)) +
geom_line(lwd = 1.01) +
geom_point(color = "darkblue", cex = 1.2)
?par
n = 30
dati = data.frame(x = 1:n, val1 = 1:n + rnorm(n), val2 = 1:n + rnorm(n, -5))
ggplot() +
geom_line(dati, aes(x = t, y = val1), lwd = 1.01, color = "darkblue") +
geom_line(dati, aes(x = t, y = val2), lwd = 1.01, color = "darkred")
n = 30
dati = data.frame(x = 1:n, val1 = 1:n + rnorm(n), val2 = 1:n + rnorm(n, -5))
ggplot() +
geom_line(aes(x = t, y = val1), dati, lwd = 1.01, color = "darkblue") +
geom_line(aes(x = t, y = val2), dati, lwd = 1.01, color = "darkred")
n = 30
dati = data.frame(t = 1:n, val1 = 1:n + rnorm(n), val2 = 1:n + rnorm(n, -5))
ggplot() +
geom_line(aes(x = t, y = val1), dati, lwd = 1.01, color = "darkblue") +
geom_line(aes(x = t, y = val2), dati, lwd = 1.01, color = "darkred")
n = 30
dati = data.frame(t = 1:n, val1 = 1:n + rnorm(n), val2 = 1:n + rnorm(n, -5))
ggplot() +
geom_line(aes(x = t, y = val1), dati, lwd = 1.01, color = "darkblue") +
geom_line(aes(x = t, y = val2), dati, lwd = 1.01, color = "darkred")
n = 30
dati = data.frame(t = 1:n, val1 = 1:n + rnorm(n), val2 = 1:n + rnorm(n, -5))
ggplot() +
geom_line(aes(x = t, y = val1), dati, lwd = 1.01, color = "darkblue") +
geom_line(aes(x = t, y = val2), dati, lwd = 1.01, color = "darkred")
dati
library(survival)
library(AML)
library(aml)
pacman::p_load(knitr, magrittr, kableExtra, ggplot2, gridExtra)
dati = c(rep("M", 30), rep("F", 15))
dati == "F"
sum(dati == "F")
tabella = cbind(
sum(dati == "F"), sum(dati == "F")/length(dati)
)
tabella
tabella = cbind(
sum(dati == "F"), sum(dati == "F")/length(dati)
) %>%
set_colnames("n", "\%")
tabella = cbind(
sum(dati == "F"), sum(dati == "F")/length(dati)
) %>%
set_colnames("n", "%")
set_colnames(c("n", "%")
tabella = cbind(
sum(dati == "F"), sum(dati == "F")/length(dati)
) %>%
set_colnames(c("n", "%")
)
?set_colnames
tabella = cbind(
sum(dati == "F"), sum(dati == "F")/length(dati)
) %>%
set_colnames(c("n", "%"))
tabella
tabella = rbind(
c(sum(dati == "F"), sum(dati == "F")/length(dati)),
c(length(dati) - sum(dati == "F"), length(dati) - sum(dati == "F")/length(dati))
) %>%
set_colnames(c("n", "%")) %>%
set_rownames("")
tabella = rbind(
c(sum(dati == "F"), sum(dati == "F")/length(dati)),
c(length(dati) - sum(dati == "F"), length(dati) - sum(dati == "F")/length(dati))
) %>%
set_colnames(c("n", "%")) %>%
set_rownames("Genere femminile", "SOGGETTI FINALI")
tabella = rbind(
c(sum(dati == "F"), sum(dati == "F")/length(dati)),
c(length(dati) - sum(dati == "F"), length(dati) - sum(dati == "F")/length(dati))
) %>%
set_colnames(c("n", "%")) %>%
set_rownames(c("Genere femminile", "SOGGETTI FINALI"))
tabella
tabella = rbind(
c(sum(dati == "F"), sum(dati == "F")/length(dati)),
c(length(dati) - sum(dati == "F"), length(dati) - sum(dati == "F")/length(dati))
) %>%
set_colnames(c("n", "%")) %>%
set_rownames(c("Genere femminile", "SOGGETTI FINALI")) %>%
kable()
rbind(
c(sum(dati == "F"), sum(dati == "F")/length(dati)),
c(length(dati) - sum(dati == "F"), length(dati) - sum(dati == "F")/length(dati))
) %>%
set_colnames(c("n", "%")) %>%
set_rownames(c("Genere femminile", "SOGGETTI FINALI")) %>%
kable()
rbind(
c(sum(dati == "F"), sum(dati == "F")/length(dati)),
c(length(dati) - sum(dati == "F"), length(dati) - sum(dati == "F")/length(dati))
) %>%
set_colnames(c("n", "%")) %>%
set_rownames(c("Genere femminile", "SOGGETTI FINALI")) %>%
kable(format = "latex", align = "c", escape = T)
?group_rows
?add_header_above
rbind(
c(sum(dati == "F"), sum(dati == "F")/length(dati)),
c(length(dati) - sum(dati == "F"), length(dati) - sum(dati == "F")/length(dati))
) %>%
set_colnames(c("n", "%")) %>%
set_rownames(c("Genere femminile", "SOGGETTI FINALI")) %>%
kable(format = "latex", align = "c", escape = T) %>%
group_rows(index = c("Criteri di esclusione") = 2)
rbind(
c(sum(dati == "F"), sum(dati == "F")/length(dati)),
c(length(dati) - sum(dati == "F"), length(dati) - sum(dati == "F")/length(dati))
) %>%
set_colnames(c("n", "%")) %>%
set_rownames(c("Genere femminile", "SOGGETTI FINALI")) %>%
kable(format = "latex", align = "c", escape = T) %>%
group_rows(index = c("Criteri di esclusione" = 2))
rbind(
c(sum(dati == "F"), sum(dati == "F")/length(dati)),
c(length(dati) - sum(dati == "F"), length(dati) - sum(dati == "F")/length(dati))
) %>%
set_colnames(c("n", "%")) %>%
set_rownames(c("Genere femminile", "SOGGETTI FINALI")) %>%
kable(format = "latex", align = "c", escape = T) %>%
group_rows(index = c("Criteri di esclusione" = 2)) %>%
row_spec(1, extra_latex_after = "\hline")
rbind(
c(sum(dati == "F"), sum(dati == "F")/length(dati)),
c(length(dati) - sum(dati == "F"), length(dati) - sum(dati == "F")/length(dati))
) %>%
set_colnames(c("n", "%")) %>%
set_rownames(c("Genere femminile", "SOGGETTI FINALI")) %>%
kable(format = "latex", align = "c", escape = T) %>%
group_rows(index = c("Criteri di esclusione" = 2)) %>%
row_spec(1, extra_latex_after = "\\hline")
rbind(
c(sum(dati == "F"), sum(dati == "F")/length(dati)),
c(length(dati) - sum(dati == "F"), length(dati) - sum(dati == "F")/length(dati))
) %>%
set_colnames(c("n", "%")) %>%
set_rownames(c("Genere femminile", "SOGGETTI FINALI")) %>%
kable(format = "latex", align = "c", escape = T, booktabs = T) %>%
group_rows(index = c("Criteri di esclusione" = 2)) %>%
row_spec(1, extra_latex_after = "\\hline")
library(kableExtra)
?kableExtra
?set_colnames
?magrittr
magrittr::set_colnames()
magrittr::set_colnames
set_colnames
?set_colnames
cars
with(cars, mean(speed))
cars$speed
mean(cars$speed)
library(VGAM)
VGAM::vglm?
s
?VGAM::vglm
?VGAM::vgam
setwd("Desktop/PhonePi_SampleServer-master/")
dati = read.csv("accelerometer.txt")
dati
dati = read.csv("accelerometer.txt", header = F)
dati
summary(dati)
a = sqrt(dati$V1^2 + dati$V2^2 + dati$V3^2)
a
plot(a)
plot(a, type = "l")
plot(a[300:370], type = "l")
setwd("Desktop/PhonePi_SampleServer-master/")
dati = read.csv("accelerometer.txt", header = F)
a = sqrt(dati$V1^2 + dati$V2^2 + dati$V3^2)
plot(a[300:370], type = "l")
plot(a, type = "l")
plot(a[1300:1500], type = "l")
plot(a, type = "l")
setwd("Desktop/PhonePi_SampleServer-master/")
dati = read.csv("accelerometer.txt", header = F)
a = sqrt(dati$V1^2 + dati$V2^2 + dati$V3^2)
length(a)
plot(a[2500:5654], type = "l")
plot(a[2500:5654], type = "l")
setwd("Desktop/PhonePi_SampleServer-master/")
dati = read.csv("accelerometer.txt", header = F)
a = sqrt(dati$V1^2 + dati$V2^2 + dati$V3^2)
plot(a[2500:5654], type = "l")
a
dati
dati[2500:5000,]
setwd("Desktop/PhonePi_SampleServer-master/")
dati = read.csv("accelerometer.txt", header = F)
dati
a
a = sqrt(dati$V1^2 + dati$V2^2 + dati$V3^2)
a = sqrt(dati$V1^2 + dati$V2^2 + as.numeric(dati$V3)^2)
plot(a[2500:5654], type = "l")
as.numeric(dati$V3)
dati$V3
str(dati)
as.double(dati$V3)
as.numeric(as.matrix(dati$V3))
a = sqrt(dati$V1^2 + dati$V2^2 + as.numeric(as.matrix(dati$V3))^2)
plot(a[2500:5654], type = "l")
density(a[2500:5654], type = "l")
plot(density(a[2500:5654], type = "l"))
plot
plot(a[2500:5654], type = "l")
plot(smooth.spline(2500:5654, a[2500:5654], type = "l"))
plot(smooth.spline(2500:5654, a[2500:5654]), type = "l")
par(mfrow=c(2,1))
plot(a[2500:5654])
plot(smooth.spline(2500:5654, a[2500:5654]), type = "l")
par(mfrow=c(1,1))
par(mfrow=c(2,1))
plot(a[2500:5654],type="l")
plot(smooth.spline(2500:5654, a[2500:5654]), type = "l")
par(mfrow=c(1,1))
par(mfrow=c(2,1))
plot(a[2500:5654],type="l", ylab = "a")
plot(smooth.spline(2500:5654, a[2500:5654]), type = "l", ylab = "a")
par(mfrow=c(1,1))
plot(a[2500:5654],type="l", ylab = "a")
setwd("Desktop/PhonePi_SampleServer-master/")
dati = read.csv("accelerometer.txt", header = F)
a = sqrt(dati$V1^2 + dati$V2^2 + as.numeric(as.matrix(dati$V3))^2)
plot(a[2500:5654],type="l", ylab = "a")
library(latex2exp)
plot(a[2500:5654],type="l", ylab = TeX("$\|a\|$"))
TeX
?TeX
plot(a[2500:5654],type="l", ylab = TeX("$\\|a\\|$", ))
plot(a[2500:5654],type="l", ylab = TeX("$\\|a\\|$", ))
plot(a[2500:5654],type="l", ylab = TeX("$\\|a\\|$"))
plot(a[2500:5654],type="l", ylab = paste0(TeX("$\\|a\\|$")))
plot(a[2500:5654],type="l", ylab = TeX("$\\\|a\\\|$"))
plot(a[2500:5654],type="l", ylab = TeX("$a$"))
plot(a[2500:5654],type="l", ylab = TeX("\$a\$"))
latex2exp_examples()
latex2exp_supported()
plot(a[2500:5654],type="l", ylab = TeX("$||a||$"))
plot(a[2500:5654],type="l",ylab = TeX("$||a||$"))
{
par(mfrow=c(2,1))
plot(a[2500:5654],type="l", ylab = "a")
plot(smooth.spline(2500:5654, a[2500:5654]), type = "l", ylab = "a")
par(mfrow=c(1,1))
}
library(latex2exp)
setwd("Desktop/PhonePi_SampleServer-master/")
dati = read.csv("accelerometer.txt", header = F)
a = sqrt(dati$V1^2 + dati$V2^2 + as.numeric(as.matrix(dati$V3))^2)
plot(a[2500:5654],type="l",ylab = TeX("$||a||$"))
{
par(mfrow=c(2,1))
plot(a[2500:5654],type="l", ylab = "a")
plot(smooth.spline(2500:5654, a[2500:5654]), type = "l", ylab = "a")
par(mfrow=c(1,1))
}
plot(a[2500:5654],type="l",ylab = TeX("$||a||$"))
library(latex2exp)
setwd("Desktop/PhonePi_SampleServer-master/")
dati = read.csv("accelerometer.txt", header = F)
a = sqrt(dati$V1^2 + dati$V2^2 + as.numeric(as.matrix(dati$V3))^2)
plot(a[2500:5654],type="l",ylab = TeX("$||a||$"))
{
par(mfrow=c(2,1))
plot(a[2500:5654],type="l", ylab = "a")
plot(smooth.spline(2500:5654, a[2500:5654]), type = "l", ylab = "a")
par(mfrow=c(1,1))
}
library(latex2exp)
setwd("Desktop/PhonePi_SampleServer-master/")
dati = read.csv("accelerometer.txt", header = F)
a = sqrt(dati$V1^2 + dati$V2^2 + as.numeric(as.matrix(dati$V3))^2)
plot(a[2500:5654],type="l",ylab = TeX("$||a||$"))
{
par(mfrow=c(2,1))
plot(a[2500:5654],type="l", ylab = "a")
plot(smooth.spline(2500:5654, a[2500:5654]), type = "l", ylab = "a")
par(mfrow=c(1,1))
}
getwd()
library(latex2exp)
dati = read.csv("./bus/accelerometer.txt", header = F)
dati = read.csv("./data/bus/accelerometer.txt", header = F)
a = sqrt(as.numeric(as.matrix(dati$V4))^2 +
as.numeric(as.matrix(dati$V5))^2 +
as.numeric(as.matrix(dati$V6))^2)
t = dati$V3 - dati$V3[1]
plot(t, a,type="l",ylab = TeX("$||a||$"), xlab = "t (ms)")
abline(h=9.81, lty="dashed", col = 2)
plot(t,dati$V4, type="l", col = 1)
lines(t,dati$V5, col = 2)
lines(t,dati$V6, col = 3)
plot(t, a,type="l",ylab = TeX("$||a||$"), xlab = "t (ms)")
abline(h=9.81, lty="dashed", col = 2)
for(i in seq(0,15000, by = 2000)){
abline(v=i,col=2, lty = "dashed")
}
max(t)
plot(t, a,type="l",ylab = TeX("$||a||$"), xlab = "t (ms)")
abline(h=9.81, lty="dashed", col = 2)
for(i in seq(0,max(t), by = 2000)){
abline(v=i,col=2, lty = "dashed")
}
library(latex2exp)
dati = read.csv("./data/bus/accelerometer.txt", header = F)
a = sqrt(as.numeric(as.matrix(dati$V4))^2 +
as.numeric(as.matrix(dati$V5))^2 +
as.numeric(as.matrix(dati$V6))^2)
t = dati$V3 - dati$V3[1]
plot(t, a,type="l",ylab = TeX("$||a||$"), xlab = "t (ms)")
abline(h=9.81, lty="dashed", col = 2)
library(latex2exp)
dati = read.csv("./data/bus/accelerometer.txt", header = F)
a = sqrt(as.numeric(as.matrix(dati$V4))^2 +
as.numeric(as.matrix(dati$V5))^2 +
as.numeric(as.matrix(dati$V6))^2)
t = dati$V3 - dati$V3[1]
plot(t, a,type="l",ylab = TeX("$||a||$"), xlab = "t (ms)")
abline(h=9.81, lty="dashed", col = 2)
for(i in seq(0,max(t), by = 2000)){
abline(v=i,col=2, lty = "dashed")
}
plot(t, a,type="l",ylab = TeX("$||a||$"), xlab = "t (ms)")
abline(h=9.81, lty="dashed", col = 2)
for(i in seq(0,max(t), by = 3000)){
abline(v=i,col=2, lty = "dashed")
}
